never p0_1 {    /* !([] (! (((((NS_L==Green)) && ((WN_L==Green))) && ((SW_L==Green))) && ((EW_L==Green))))) */
T0_init:
	do
	:: atomic { (! ((! (((((NS_L==Green)) && ((WN_L==Green))) && ((SW_L==Green))) && ((EW_L==Green)))))) -> assert(!(! ((! (((((NS_L==Green)) && ((WN_L==Green))) && ((SW_L==Green))) && ((EW_L==Green))))))) }
	:: (1) -> goto T0_init
	od;
accept_all:
	skip
}
never p0_2 {    /* !([] (! ((((((WN_L==Green)) && ((NS_L==Green))) && ((NE_L==Green))) && ((SW_L==Green))) && ((EW_L==Green))))) */
T0_init:
	do
	:: atomic { (! ((! ((((((WN_L==Green)) && ((NS_L==Green))) && ((NE_L==Green))) && ((SW_L==Green))) && ((EW_L==Green)))))) -> assert(!(! ((! ((((((WN_L==Green)) && ((NS_L==Green))) && ((NE_L==Green))) && ((SW_L==Green))) && ((EW_L==Green))))))) }
	:: (1) -> goto T0_init
	od;
accept_all:
	skip
}
never p0_3 {    /* !([] (! (((((EW_L==Green)) && ((NE_L==Green))) && ((WN_L==Green))) && ((NS_L==Green))))) */
T0_init:
	do
	:: atomic { (! ((! (((((EW_L==Green)) && ((NE_L==Green))) && ((WN_L==Green))) && ((NS_L==Green)))))) -> assert(!(! ((! (((((EW_L==Green)) && ((NE_L==Green))) && ((WN_L==Green))) && ((NS_L==Green))))))) }
	:: (1) -> goto T0_init
	od;
accept_all:
	skip
}
never p0_4 {    /* !([] (! (((((NE_L==Green)) && ((WN_L==Green))) && ((ES_L==Green))) && ((EW_L==Green))))) */
T0_init:
	do
	:: atomic { (! ((! (((((NE_L==Green)) && ((WN_L==Green))) && ((ES_L==Green))) && ((EW_L==Green)))))) -> assert(!(! ((! (((((NE_L==Green)) && ((WN_L==Green))) && ((ES_L==Green))) && ((EW_L==Green))))))) }
	:: (1) -> goto T0_init
	od;
accept_all:
	skip
}
never p0_5 {    /* !([] (! (((((SW_L==Green)) && ((ES_L==Green))) && ((WN_L==Green))) && ((NS_L==Green))))) */
T0_init:
	do
	:: atomic { (! ((! (((((SW_L==Green)) && ((ES_L==Green))) && ((WN_L==Green))) && ((NS_L==Green)))))) -> assert(!(! ((! (((((SW_L==Green)) && ((ES_L==Green))) && ((WN_L==Green))) && ((NS_L==Green))))))) }
	:: (1) -> goto T0_init
	od;
accept_all:
	skip
}
never p0_6 {    /* !([] (! (((((SW_L==Green)) && ((ES_L==Green))) && ((WN_L==Green))) && ((NS_L==Green))))) */
T0_init:
	do
	:: atomic { (! ((! (((((SW_L==Green)) && ((ES_L==Green))) && ((WN_L==Green))) && ((NS_L==Green)))))) -> assert(!(! ((! (((((SW_L==Green)) && ((ES_L==Green))) && ((WN_L==Green))) && ((NS_L==Green))))))) }
	:: (1) -> goto T0_init
	od;
accept_all:
	skip
}
never p1_1 {    /* !([] ((! ((NS_S) && ((NS_L==Red)))) || (<> ((NS_L==Green))))) */
T0_init:
	do
	:: (! ((! ((NS_S) && ((NS_L==Red))))) && ! (((NS_L==Green)))) -> goto accept_S4
	:: (1) -> goto T0_init
	od;
accept_S4:
	do
	:: (! (((NS_L==Green)))) -> goto accept_S4
	od;
}
never p1_2 {    /* !([] ((! ((WN_S) && ((WN_L==Red)))) || (<> ((WN_L==Green))))) */
T0_init:
	do
	:: (! ((! ((WN_S) && ((WN_L==Red))))) && ! (((WN_L==Green)))) -> goto accept_S4
	:: (1) -> goto T0_init
	od;
accept_S4:
	do
	:: (! (((WN_L==Green)))) -> goto accept_S4
	od;
}
never p1_3 {    /* !([] ((! ((EW_S) && ((EW_L==Red)))) || (<> ((EW_L==Green))))) */
T0_init:
	do
	:: (! ((! ((EW_S) && ((EW_L==Red))))) && ! (((EW_L==Green)))) -> goto accept_S4
	:: (1) -> goto T0_init
	od;
accept_S4:
	do
	:: (! (((EW_L==Green)))) -> goto accept_S4
	od;
}
never p1_4 {    /* !([] ((! ((NE_S) && ((NE_L==Red)))) || (<> ((NE_L==Green))))) */
T0_init:
	do
	:: (! ((! ((NE_S) && ((NE_L==Red))))) && ! (((NE_L==Green)))) -> goto accept_S4
	:: (1) -> goto T0_init
	od;
accept_S4:
	do
	:: (! (((NE_L==Green)))) -> goto accept_S4
	od;
}
never p1_5 {    /* !([] ((! ((SW_S) && ((SW_L==Red)))) || (<> ((SW_L==Green))))) */
T0_init:
	do
	:: (! ((! ((SW_S) && ((SW_L==Red))))) && ! (((SW_L==Green)))) -> goto accept_S4
	:: (1) -> goto T0_init
	od;
accept_S4:
	do
	:: (! (((SW_L==Green)))) -> goto accept_S4
	od;
}
never p1_6 {    /* !([] ((! ((ES_S) && ((ES_L==Red)))) || (<> ((ES_L==Green))))) */
T0_init:
	do
	:: (! ((! ((ES_S) && ((ES_L==Red))))) && ! (((ES_L==Green)))) -> goto accept_S4
	:: (1) -> goto T0_init
	od;
accept_S4:
	do
	:: (! (((ES_L==Green)))) -> goto accept_S4
	od;
}
never p2_1 {    /* !([] (<> ((! ([] (<> (! (((NS_L==Green)) && (NS_S)))))) || ([] ((! ((NS_S) && ((NS_L==Red)))) || (<> ((NS_L==Green)))))))) */
T0_init:
	do
	:: ((! (((NS_L==Green)) && (NS_S))) && ! ((! ((NS_S) && ((NS_L==Red))))) && ! (((NS_L==Green)))) -> goto accept_S12
	:: (! ((! ((NS_S) && ((NS_L==Red))))) && ! (((NS_L==Green)))) -> goto T2_S6
	:: (1) -> goto T0_S623
	:: (1) -> goto T0_init
	od;
accept_S12:
	do
	:: ((! (((NS_L==Green)) && (NS_S))) && ! ((! ((NS_S) && ((NS_L==Red))))) && ! (((NS_L==Green)))) -> goto T0_S12
	:: (! (((NS_L==Green)))) -> goto T0_S6
	od;
accept_S6:
	do
	:: (! (((NS_L==Green)))) -> goto T0_S6
	od;
T2_S6:
	do
	:: (! (((NS_L==Green)))) -> goto T2_S6
	:: ((! (((NS_L==Green)) && (NS_S))) && ! (((NS_L==Green)))) -> goto accept_S6
	od;
T0_S12:
	do
	:: ((! (((NS_L==Green)) && (NS_S))) && ! ((! ((NS_S) && ((NS_L==Red))))) && ! (((NS_L==Green)))) -> goto accept_S12
	:: (! ((! ((NS_S) && ((NS_L==Red))))) && ! (((NS_L==Green)))) -> goto T2_S6
	:: (! (((NS_L==Green)))) -> goto T0_S6
	od;
T0_S6:
	do
	:: (! ((! ((NS_S) && ((NS_L==Red))))) && ! (((NS_L==Green)))) -> goto T2_S6
	:: ((! (((NS_L==Green)) && (NS_S))) && ! ((! ((NS_S) && ((NS_L==Red))))) && ! (((NS_L==Green)))) -> goto accept_S6
	:: (! (((NS_L==Green)))) -> goto T0_S6
	od;
T0_S623:
	do
	:: (! ((! ((NS_S) && ((NS_L==Red))))) && ! (((NS_L==Green)))) -> goto T2_S6
	:: ((! (((NS_L==Green)) && (NS_S))) && ! ((! ((NS_S) && ((NS_L==Red))))) && ! (((NS_L==Green)))) -> goto accept_S6
	:: (1) -> goto T0_S623
	od;
}
never p2_2 {    /* !((! ([] (<> (! (((WN_L==Green)) && (WN_S)))))) || (([] (<> (! (((WN_L==Green)) && (WN_S))))) && ((! ((WN_S) && ((WN_L==Red)))) || (<> ((WN_L==Green)))))) */
T0_init:
	do
	:: ((! (((WN_L==Green)) && (WN_S)))) -> goto T1_S197
	:: ((! (((WN_L==Green)) && (WN_S))) && ! ((! ((WN_S) && ((WN_L==Red))))) && ! (((WN_L==Green)))) -> goto accept_S227
	:: (! ((! (((WN_L==Green)) && (WN_S))))) -> goto T0_S198
	:: (1) -> goto T0_S197
	:: (! ((! ((WN_S) && ((WN_L==Red))))) && ! (((WN_L==Green)))) -> goto T0_S227
	od;
accept_S198:
	do
	:: (! ((! (((WN_L==Green)) && (WN_S))))) -> goto T0_S198
	od;
accept_S227:
	do
	:: (! (((WN_L==Green)))) -> goto T0_S227
	od;
T1_S197:
	do
	:: (! ((! (((WN_L==Green)) && (WN_S))))) -> goto accept_S198
	:: (1) -> goto T1_S197
	od;
T0_S198:
	do
	:: (! ((! (((WN_L==Green)) && (WN_S))))) -> goto T0_S198
	od;
T0_S197:
	do
	:: (! ((! (((WN_L==Green)) && (WN_S))))) -> goto T0_S198
	:: ((! (((WN_L==Green)) && (WN_S)))) -> goto T1_S197
	:: (1) -> goto T0_S197
	od;
T0_S227:
	do
	:: ((! (((WN_L==Green)) && (WN_S))) && ! (((WN_L==Green)))) -> goto accept_S227
	:: (! (((WN_L==Green)))) -> goto T0_S227
	od;
}
never p2_3 {    /* !((! ([] (<> (! (((EW_L==Green)) && (EW_S)))))) || (([] (<> (! (((EW_L==Green)) && (EW_S))))) && ((! ((EW_S) && ((EW_L==Red)))) || (<> ((EW_L==Green)))))) */
T0_init:
	do
	:: ((! (((EW_L==Green)) && (EW_S)))) -> goto T1_S197
	:: ((! (((EW_L==Green)) && (EW_S))) && ! ((! ((EW_S) && ((EW_L==Red))))) && ! (((EW_L==Green)))) -> goto accept_S227
	:: (! ((! (((EW_L==Green)) && (EW_S))))) -> goto T0_S198
	:: (1) -> goto T0_S197
	:: (! ((! ((EW_S) && ((EW_L==Red))))) && ! (((EW_L==Green)))) -> goto T0_S227
	od;
accept_S198:
	do
	:: (! ((! (((EW_L==Green)) && (EW_S))))) -> goto T0_S198
	od;
accept_S227:
	do
	:: (! (((EW_L==Green)))) -> goto T0_S227
	od;
T1_S197:
	do
	:: (! ((! (((EW_L==Green)) && (EW_S))))) -> goto accept_S198
	:: (1) -> goto T1_S197
	od;
T0_S198:
	do
	:: (! ((! (((EW_L==Green)) && (EW_S))))) -> goto T0_S198
	od;
T0_S197:
	do
	:: (! ((! (((EW_L==Green)) && (EW_S))))) -> goto T0_S198
	:: ((! (((EW_L==Green)) && (EW_S)))) -> goto T1_S197
	:: (1) -> goto T0_S197
	od;
T0_S227:
	do
	:: ((! (((EW_L==Green)) && (EW_S))) && ! (((EW_L==Green)))) -> goto accept_S227
	:: (! (((EW_L==Green)))) -> goto T0_S227
	od;
}
never p2_4 {    /* !((! ([] (<> (! (((NE_L==Green)) && (NE_S)))))) || (([] (<> (! (((NE_L==Green)) && (NE_S))))) && ((! ((NE_S) && ((NE_L==Red)))) || (<> ((NE_L==Green)))))) */
T0_init:
	do
	:: ((! (((NE_L==Green)) && (NE_S)))) -> goto T1_S197
	:: ((! (((NE_L==Green)) && (NE_S))) && ! ((! ((NE_S) && ((NE_L==Red))))) && ! (((NE_L==Green)))) -> goto accept_S227
	:: (! ((! (((NE_L==Green)) && (NE_S))))) -> goto T0_S198
	:: (1) -> goto T0_S197
	:: (! ((! ((NE_S) && ((NE_L==Red))))) && ! (((NE_L==Green)))) -> goto T0_S227
	od;
accept_S198:
	do
	:: (! ((! (((NE_L==Green)) && (NE_S))))) -> goto T0_S198
	od;
accept_S227:
	do
	:: (! (((NE_L==Green)))) -> goto T0_S227
	od;
T1_S197:
	do
	:: (! ((! (((NE_L==Green)) && (NE_S))))) -> goto accept_S198
	:: (1) -> goto T1_S197
	od;
T0_S198:
	do
	:: (! ((! (((NE_L==Green)) && (NE_S))))) -> goto T0_S198
	od;
T0_S197:
	do
	:: (! ((! (((NE_L==Green)) && (NE_S))))) -> goto T0_S198
	:: ((! (((NE_L==Green)) && (NE_S)))) -> goto T1_S197
	:: (1) -> goto T0_S197
	od;
T0_S227:
	do
	:: ((! (((NE_L==Green)) && (NE_S))) && ! (((NE_L==Green)))) -> goto accept_S227
	:: (! (((NE_L==Green)))) -> goto T0_S227
	od;
}
never p2_5 {    /* !((! ([] (<> (! (((ES_L==Green)) && (ES_S)))))) || (([] (<> (! (((ES_L==Green)) && (ES_S))))) && ((! ((ES_S) && ((ES_L==Red)))) || (<> ((ES_L==Green)))))) */
T0_init:
	do
	:: ((! (((ES_L==Green)) && (ES_S)))) -> goto T1_S197
	:: ((! (((ES_L==Green)) && (ES_S))) && ! ((! ((ES_S) && ((ES_L==Red))))) && ! (((ES_L==Green)))) -> goto accept_S227
	:: (! ((! (((ES_L==Green)) && (ES_S))))) -> goto T0_S198
	:: (1) -> goto T0_S197
	:: (! ((! ((ES_S) && ((ES_L==Red))))) && ! (((ES_L==Green)))) -> goto T0_S227
	od;
accept_S198:
	do
	:: (! ((! (((ES_L==Green)) && (ES_S))))) -> goto T0_S198
	od;
accept_S227:
	do
	:: (! (((ES_L==Green)))) -> goto T0_S227
	od;
T1_S197:
	do
	:: (! ((! (((ES_L==Green)) && (ES_S))))) -> goto accept_S198
	:: (1) -> goto T1_S197
	od;
T0_S198:
	do
	:: (! ((! (((ES_L==Green)) && (ES_S))))) -> goto T0_S198
	od;
T0_S197:
	do
	:: (! ((! (((ES_L==Green)) && (ES_S))))) -> goto T0_S198
	:: ((! (((ES_L==Green)) && (ES_S)))) -> goto T1_S197
	:: (1) -> goto T0_S197
	od;
T0_S227:
	do
	:: ((! (((ES_L==Green)) && (ES_S))) && ! (((ES_L==Green)))) -> goto accept_S227
	:: (! (((ES_L==Green)))) -> goto T0_S227
	od;
}
never p2_6 {    /* !((! ([] (<> (! (((SW_L==Green)) && (SW_S)))))) || (([] (<> (! (((SW_L==Green)) && (SW_S))))) && ((! ((SW_S) && ((SW_L==Red)))) || (<> ((SW_L==Green)))))) */
T0_init:
	do
	:: ((! (((SW_L==Green)) && (SW_S)))) -> goto T1_S197
	:: ((! (((SW_L==Green)) && (SW_S))) && ! ((! ((SW_S) && ((SW_L==Red))))) && ! (((SW_L==Green)))) -> goto accept_S227
	:: (! ((! (((SW_L==Green)) && (SW_S))))) -> goto T0_S198
	:: (1) -> goto T0_S197
	:: (! ((! ((SW_S) && ((SW_L==Red))))) && ! (((SW_L==Green)))) -> goto T0_S227
	od;
accept_S198:
	do
	:: (! ((! (((SW_L==Green)) && (SW_S))))) -> goto T0_S198
	od;
accept_S227:
	do
	:: (! (((SW_L==Green)))) -> goto T0_S227
	od;
T1_S197:
	do
	:: (! ((! (((SW_L==Green)) && (SW_S))))) -> goto accept_S198
	:: (1) -> goto T1_S197
	od;
T0_S198:
	do
	:: (! ((! (((SW_L==Green)) && (SW_S))))) -> goto T0_S198
	od;
T0_S197:
	do
	:: (! ((! (((SW_L==Green)) && (SW_S))))) -> goto T0_S198
	:: ((! (((SW_L==Green)) && (SW_S)))) -> goto T1_S197
	:: (1) -> goto T0_S197
	od;
T0_S227:
	do
	:: ((! (((SW_L==Green)) && (SW_S))) && ! (((SW_L==Green)))) -> goto accept_S227
	:: (! (((SW_L==Green)))) -> goto T0_S227
	od;
}
